events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # Add CORS headers for streaming
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

    server {
        listen 80;
        server_name localhost;

        # Serve static files
        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        # Proxy go2rtc API
        location /api/ {
            proxy_pass http://go2rtc:1984/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebRTC endpoint
        location /webrtc.html {
            proxy_pass http://go2rtc:1984/webrtc.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # HLS streams
        location ~* \.(m3u8|ts)$ {
            proxy_pass http://go2rtc:1984;
            proxy_set_header Host $host;
            
            # HLS specific headers
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }
    }
}